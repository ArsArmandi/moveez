#waiting for https://dev.azure.com/mseng/AzureDevOpsRoadmap/_workitems/edit/1364226/
variables:
  registryName: 'moveez'
  registryLogin: ''
  registryPassword: ''
  projectName: 'gui'

steps:
- task: HelmInstaller@0
  displayName: 'Install Helm 2.13.0'
  inputs:
    helmVersion: 2.13.0
    checkLatestHelmVersion: false

- task: HelmDeploy@0
  displayName: 'helm init'
  inputs:
    azureSubscription: ''
    azureResourceGroup: moveez
    kubernetesCluster: moveez
    command: init
    arguments: '--service-account tiller'

- bash: 'helm repo add $(registryName) https://$(registryName).azurecr.io/helm/v1/repo --username $(registryLogin) --password $(registryPassword)'
  displayName: 'helm repo add'

- task: HelmDeploy@0
  displayName: 'helm upgrade'
  inputs:
    azureSubscription: ''
    azureResourceGroup: moveez
    kubernetesCluster: moveez
    command: upgrade
    chartName: '$(registryName)/$(projectName)_$(Build.SourceBranchName)'
    releaseName: '$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName)'
    arguments: '--version $(build.BuildNumber) --set image.repository=$(registryName).azurecr.io/$(projectName) --set image.tag=$(build.BuildNumber)_$(Build.SourceBranchName) --set ingress.enabled=false --set branchName=$(Build.SourceBranchName)  --set stage=$(Release.EnvironmentName)'

- bash: |
   echo "sleep for 20 seconds"
   sleep 20
   echo "curl https://$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName).moveez.de/health -v"
   curl https://$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName).moveez.de/health -v
  displayName: Flightcheck

- task: DownloadPipelineArtifact@1
  displayName: 'Download Cypress Test'
  inputs:
    artifactName: '$(Build.BuildId)_cypress'

- task: eliostruyf.build-task.custom-build-task.file-creator@5
  displayName: 'Create Cypress Config'
  inputs:
    fileoverwrite: true
    filepath: cypress.json
    filecontent: |
     {
       "integrationFolder": "integration",
       "baseUrl": "https://$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName).moveez.de",
       "projectId": "dhwwh4",
       "reporter": "junit",
       "reporterOptions": {
         "mochaFile": "tests/test-output-[hash].xml",
         "toConsole": true,
         "attachments": true
         },
       "video": true
     }
    endWithNewLine: true

- bash: |
   echo "run cypress test via npx"
   npx cypress run --record --key feabec01-1876-48b8-a342-afa3f885793b --ci-build-id $(build.BuildNumber)_$(Build.SourceBranchName) --parallel
  displayName: 'Perform Cypress Test'

- task: PublishTestResults@2
  displayName: 'Publish Cypress Results'
  inputs:
    testResultsFiles: '*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/tests'
    mergeTestResults: true
    failTaskOnFailedTests: true
    testRunTitle: 'Cypress Test Results'
  condition: succeededOrFailed()

- bash: |
   echo "perform lighthouse test with npx lighthouse-ci https://$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName).moveez.de --performance=60 --output=html"
   npx lighthouse-ci https://$(projectName)-$(Build.SourceBranchName)-$(Release.EnvironmentName).moveez.de --performance=60 --output=html
  displayName: 'Perform Lighthouse Test'
