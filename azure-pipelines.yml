resources:
- repo: self

jobs:

- job: Job_1
  displayName: gui
  condition: succeeded()
  pool:
    vmImage: Hosted Ubuntu 1604
    demands:
    - npm
    - java

  variables:
    dockerhubRepo: 'schdieflaw'

  steps:
  - task: Npm@1
    displayName: 'Install Dependencies'
    inputs:
      workingDir: services/gui
      verbose: false

  - task: Npm@1
    displayName: 'Integration Test'
    inputs:
      command: custom
      workingDir: services/gui
      verbose: false
      customCommand: test

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: azuredevops
      organization: 'schdief-github'
      scannerMode: CLI
      configMode: manual
      cliProjectKey: 'schdief:moveez'
      cliProjectName: moveez
      cliSources: services/gui/src/app

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'

  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'

  - task: Npm@1
    displayName: Babel
    inputs:
      command: custom
      workingDir: services/gui
      verbose: false
      customCommand: 'run babel'

  - task: Npm@1
    displayName: Webpack
    inputs:
      command: custom
      workingDir: services/gui
      verbose: false
      customCommand: 'run webpack'

  - task: Docker@0
    displayName: 'Build Docker Image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: dockerhub
      dockerFile: services/gui/Dockerfile
      imageName: '$(dockerhubRepo)/moveez:$(Build.BuildNumber).$(Build.BuildId).$(Build.SourceVersion)'
      workingDirectory: services/gui

  - task: Docker@0
    displayName: 'Push Docker Image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: dockerhub
      action: 'Push an image'
      imageName: '$(dockerhubRepo)/moveez:$(Build.BuildNumber).$(Build.BuildId).$(Build.SourceVersion)'
      workingDirectory: services/gui


- job: Job_2
  displayName: ketchup
  condition: succeeded()
  pool:
    vmImage: Hosted Ubuntu 1604
    demands:
    - npm
    - java

  variables:
    dockerhubRepo: 'schdieflaw'

  steps:
  - task: Npm@1
    displayName: 'Install Dependencies'
    inputs:
      workingDir: services/ketchup
      verbose: false

  - task: Npm@1
    displayName: 'Integration Test'
    inputs:
      command: custom
      workingDir: services/ketchup
      verbose: false
      customCommand: test

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: azuredevops
      organization: 'schdief-github'
      scannerMode: CLI
      configMode: manual
      cliProjectKey: 'schdief:ketchup'
      cliProjectName: ketchup
      cliSources: services/ketchup/ketchup.js

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'
    continueOnError: true

  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
    continueOnError: true

  - task: Docker@0
    displayName: 'Build Docker Image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: dockerhub
      dockerFile: services/ketchup/Dockerfile
      imageName: '$(dockerhubRepo)/ketchup:$(Build.BuildNumber).$(Build.BuildId).$(Build.SourceVersion)'
      workingDirectory: services/ketchup

  - task: Docker@0
    displayName: 'Push Docker Image'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryConnection: dockerhub
      action: 'Push an image'
      imageName: '$(dockerhubRepo)/ketchup:$(Build.BuildNumber).$(Build.BuildId).$(Build.SourceVersion)'
      workingDirectory: services/ketchup